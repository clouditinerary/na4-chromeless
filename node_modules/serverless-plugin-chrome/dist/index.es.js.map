{"version":3,"file":"index.es.js","sources":["../src/constants.js","../src/utils.js","../src/index.js"],"sourcesContent":["export const SERVERLESS_FOLDER = '.serverless'\nexport const BUILD_FOLDER = '.build'\n\nexport const SUPPORTED_PROVIDERS = ['aws']\nexport const SUPPORTED_RUNTIMES = ['nodejs6.10']\n\nexport const INCLUDES = [\n  'node_modules/@serverless-chrome/lambda/package.json',\n  'node_modules/@serverless-chrome/lambda/dist/bundle.cjs.js',\n  'node_modules/@serverless-chrome/lambda/dist/headless-chromium',\n]\n","import * as path from 'path'\nimport { SUPPORTED_PROVIDERS, SUPPORTED_RUNTIMES } from './constants'\n\nexport function throwIfUnsupportedProvider (provider) {\n  if (!SUPPORTED_PROVIDERS.includes(provider)) {\n    throw new Error('The \"serverless-plugin-headless-chrome\" plugin currently only supports AWS Lambda. ' +\n        `Your service is using the \"${provider}\" provider.`)\n  }\n}\n\nexport function throwIfUnsupportedRuntime (runtime) {\n  if (!SUPPORTED_RUNTIMES.includes(runtime)) {\n    throw new Error('The \"serverless-plugin-headless-chrome\" plugin only supports the Node.js 6.10 runtime. ' +\n        `Your service is using the \"${runtime}\" provider.`)\n  }\n}\n\nexport function throwIfWrongPluginOrder (plugins) {\n  const comesBefore = ['serverless-plugin-typescript']\n  const comesAfter = ['serverless-webpack']\n\n  const ourIndex = plugins.indexOf('serverless-plugin-chrome')\n\n  plugins.forEach((plugin, index) => {\n    if (comesBefore.includes(plugin) && ourIndex < index) {\n      throw new Error(`The plugin \"${plugin}\" should appear before the \"serverless-plugin-chrome\"` +\n          ' plugin in the plugin configuration section of serverless.yml.')\n    }\n\n    if (comesAfter.includes(plugin) && ourIndex > index) {\n      throw new Error(`The plugin \"${plugin}\" should appear after the \"serverless-plugin-chrome\"` +\n          ' plugin in the plugin configuration section of serverless.yml.')\n    }\n  })\n}\n\nexport function getHandlerFileAndExportName (handler = '') {\n  const fileParts = handler.split('.')\n  const exportName = fileParts.pop()\n  const file = fileParts.join('.')\n\n  return {\n    filePath: path.dirname(file),\n    fileName: `${path.basename(file)}.js`, // is it OK to assume .js?\n    exportName,\n  }\n}\n","/*\n@TODO:\n  - handle package.individually?\n    https://github.com/serverless/serverless/blob/master/lib/plugins/package/lib/packageService.js#L37\n  - support for enabling chrome only on specific functions?\n  - instead of including fs-p dep, use the fs methods from the Utils class provided by Serverless\n    or use fs-extra directly.\n  - config option to, instead of including chrome in artifact zip, download it on\n    cold-start invocations this could be useful for development, instead of having\n    to upload 50MB each deploy\n  - tests.\n  - custom.chrome.functions breaks when a wrapped and non-wrapped function have the\n    same handler.js file\n*/\n\nimport * as path from 'path'\nimport * as fs from 'fs-p' // deprecated. use fs-extra?\nimport globby from 'globby'\n\nimport { SERVERLESS_FOLDER, BUILD_FOLDER, INCLUDES } from './constants'\nimport {\n  throwIfUnsupportedProvider,\n  throwIfUnsupportedRuntime,\n  throwIfWrongPluginOrder,\n  getHandlerFileAndExportName,\n} from './utils'\n\nexport default class ServerlessChrome {\n  constructor (serverless, options) {\n    this.serverless = serverless\n    this.options = options\n\n    const { provider: { name: providerName, runtime }, plugins } = serverless.service\n\n    throwIfUnsupportedProvider(providerName)\n    throwIfUnsupportedRuntime(runtime)\n    throwIfWrongPluginOrder(plugins)\n\n    this.hooks = {\n      'before:offline:start:init': this.beforeCreateDeploymentArtifacts.bind(this),\n      'before:package:createDeploymentArtifacts': this.beforeCreateDeploymentArtifacts.bind(this),\n      'after:package:createDeploymentArtifacts': this.afterCreateDeploymentArtifacts.bind(this),\n      'before:invoke:local:invoke': this.beforeCreateDeploymentArtifacts.bind(this),\n      'after:invoke:local:invoke': this.cleanup.bind(this),\n\n      'before:webpack:package:packExternalModules': this.webpackPackageBinaries.bind(this),\n    }\n\n    // only mess with the service path if we're not already known to be within a .build folder\n    this.messWithServicePath = !plugins.includes('serverless-plugin-typescript')\n\n    // annoyingly we have to do stuff differently if using serverless-webpack plugin. lame.\n    this.webpack = plugins.includes('serverless-webpack')\n  }\n\n  async webpackPackageBinaries () {\n    const { servicePath } = this.serverless.config\n\n    await fs.copy(\n      path.join(servicePath, 'node_modules/@serverless-chrome/lambda/dist/headless-chromium'),\n      path.resolve(servicePath, '.webpack/service/headless-chromium')\n    )\n  }\n\n  async beforeCreateDeploymentArtifacts () {\n    const {\n      config,\n      cli,\n      utils,\n      service,\n      service: { provider: { name: providerName, runtime } },\n    } = this.serverless\n\n    const functionsToWrap =\n      (service.custom && service.custom.chrome && service.custom.chrome.functions) ||\n      service.getAllFunctions()\n\n    service.package.include = service.package.include || []\n\n    cli.log('Injecting Headless Chrome...')\n\n    // Save original service path and functions\n    this.originalServicePath = config.servicePath\n\n    // Fake service path so that serverless will know what to zip\n    // Unless, we're already in a .build folder from another plugin\n    if (this.messWithServicePath) {\n      config.servicePath = path.join(this.originalServicePath, BUILD_FOLDER)\n\n      if (!fs.existsSync(config.servicePath)) {\n        fs.mkdirpSync(config.servicePath)\n      }\n\n      // include node_modules into build\n      if (!fs.existsSync(path.resolve(path.join(BUILD_FOLDER, 'node_modules')))) {\n        fs.symlinkSync(\n          path.resolve('node_modules'),\n          path.resolve(path.join(BUILD_FOLDER, 'node_modules'))\n        )\n      }\n\n      // include any \"extras\" from the \"include\" section\n      const files = await globby([...service.package.include, '**', '!node_modules/**'], {\n        cwd: this.originalServicePath,\n      })\n\n      files.forEach((filename) => {\n        const sourceFile = path.resolve(path.join(this.originalServicePath, filename))\n        const destFileName = path.resolve(path.join(config.servicePath, filename))\n\n        const dirname = path.dirname(destFileName)\n\n        if (!fs.existsSync(dirname)) {\n          fs.mkdirpSync(dirname)\n        }\n\n        if (!fs.existsSync(destFileName)) {\n          fs.copySync(sourceFile, destFileName)\n        }\n      })\n    }\n\n    // Add our node_modules dependencies to the package includes\n    service.package.include = [...service.package.include, ...INCLUDES]\n\n    await Promise.all(functionsToWrap.map(async (functionName) => {\n      const { handler } = service.getFunction(functionName)\n      const { filePath, fileName, exportName } = getHandlerFileAndExportName(handler)\n      const handlerCodePath = path.join(config.servicePath, filePath)\n\n      const originalFileRenamed = `${utils.generateShortId()}___${fileName}`\n\n      const customPluginOptions = (service.custom && service.custom.chrome) || {}\n\n      const launcherOptions = {\n        ...customPluginOptions,\n        flags: customPluginOptions.flags || [],\n        chromePath: this.webpack ? '/var/task/headless-chromium' : undefined,\n      }\n\n      // Read in the wrapper handler code template\n      const wrapperTemplate = await utils.readFile(path.resolve(__dirname, '..', 'src', `wrapper-${providerName}-${runtime}.js`))\n\n      // Include the original handler via require\n      const wrapperCode = wrapperTemplate\n        .replace(\"'REPLACE_WITH_HANDLER_REQUIRE'\", `require('./${originalFileRenamed}')`)\n        .replace(\"'REPLACE_WITH_OPTIONS'\", JSON.stringify(launcherOptions))\n        .replace(/REPLACE_WITH_EXPORT_NAME/gm, exportName)\n\n        // Move the original handler's file aside\n      await fs.move(\n        path.resolve(handlerCodePath, fileName),\n        path.resolve(handlerCodePath, originalFileRenamed)\n      )\n\n      // Write the wrapper code to the function's handler path\n      await utils.writeFile(path.resolve(handlerCodePath, fileName), wrapperCode)\n    }))\n  }\n\n  async afterCreateDeploymentArtifacts () {\n    if (this.messWithServicePath) {\n      // Copy .build to .serverless\n      await fs.copy(\n        path.join(this.originalServicePath, BUILD_FOLDER, SERVERLESS_FOLDER),\n        path.join(this.originalServicePath, SERVERLESS_FOLDER)\n      )\n\n      // this.serverless.service.package.artifact = path.join(\n      //   this.originalServicePath,\n      //   SERVERLESS_FOLDER\n      //   path.basename(this.serverless.service.package.artifact)\n      // )\n\n      // Cleanup after everything is copied\n      await this.cleanup()\n    }\n  }\n\n  async cleanup () {\n    // Restore service path\n    this.serverless.config.servicePath = this.originalServicePath\n\n    // Remove temp build folder\n    fs.removeSync(path.join(this.originalServicePath, BUILD_FOLDER))\n  }\n}\n"],"names":["SERVERLESS_FOLDER","BUILD_FOLDER","SUPPORTED_PROVIDERS","SUPPORTED_RUNTIMES","INCLUDES","throwIfUnsupportedProvider","provider","includes","Error","throwIfUnsupportedRuntime","runtime","throwIfWrongPluginOrder","plugins","comesBefore","comesAfter","ourIndex","indexOf","forEach","plugin","index","getHandlerFileAndExportName","handler","fileParts","split","exportName","pop","file","join","path","ServerlessChrome","serverless","options","name","providerName","service","hooks","beforeCreateDeploymentArtifacts","bind","afterCreateDeploymentArtifacts","cleanup","webpackPackageBinaries","messWithServicePath","webpack","servicePath","config","fs","functionsToWrap","custom","chrome","functions","getAllFunctions","package","include","log","originalServicePath","files","globby","filename","sourceFile","destFileName","dirname","Promise","all","map","functionName","getFunction","filePath","fileName","handlerCodePath","originalFileRenamed","utils","generateShortId","customPluginOptions","launcherOptions","flags","undefined","wrapperTemplate","readFile","__dirname","wrapperCode","replace","JSON","stringify","writeFile"],"mappings":"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"}